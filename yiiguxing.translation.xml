<application>
  <component name="AppStorage">
    <option name="lastSourceLanguage" value="AUTO" />
    <option name="lastTargetLanguage" value="AUTO" />
    <histories>
      <item value="Oper" />
      <item value="incorrect" />
      <item value="This just serves as a hint for the actual transaction subsystem; it will not necessarily cause failure of write access attempts. A transaction manager which cannot interpret the read-only hint will not throw an exception when asked for a read-only transaction but rather silently ignore the hint." />
      <item value="This just serves as a hint for the actual transaction subsystem; it will not necessarily cause failure of write access attempts. A transaction manager which cannot interpret the read-only hint will not throw an exception when asked for a read-only transaction but rather silently ignore the hint" />
      <item value="capacity" />
      <item value="Reentrant" />
      <item value="permits" />
      <item value="信号" />
      <item value="Abstract Queue" />
      <item value="Deque" />
      <item value="少量" />
      <item value="Consumer" />
      <item value="Return whether this advice is associated with a particular instance (for example, creating a mixin) or shared with all instances of the advised class obtained from the same Spring bean factory. Note that this method is not currently used by the framework. Typical Advisor implementations always return true. Use singleton/prototype bean definitions or appropriate programmatic proxy creation to ensure that Advisors have the correct lifecycle model." />
      <item value="is Per Instance" />
      <item value="formal" />
      <item value="Aspect" />
      <item value="circumstances" />
      <item value="peek" />
      <item value="infer" />
      <item value="Map" />
      <item value="populated" />
      <item value="Supported in addition to the standard scopes &quot;singleton&quot; and &quot;prototype&quot;." />
      <item value="addition" />
      <item value="VIEW RESOLVER BEAN NAME" />
      <item value="Merged" />
      <item value="重复" />
      <item value="NORMAL" />
      <item value="普通" />
      <item value="平等" />
      <item value="平等的" />
      <item value="中等的" />
      <item value="平凡" />
      <item value="平常" />
      <item value="普通的" />
      <item value="NOMORAL" />
      <item value="Returns true if and only if the specified class was dynamically generated to be a proxy class using the getProxyClass method or the newProxyInstance method. The reliability of this method is important for the ability to use it to make security decisions, so its implementation should not just test if the class in question extends Proxy" />
      <item value="Caller Sensitive" />
      <item value="Sensitive" />
      <item value="designated" />
      <item value="initargs" />
      <item value="Privileged" />
      <item value="Autowired" />
      <item value="Qualifier" />
      <item value="expression" />
      <item value="oneshot" />
      <item value="onshot" />
      <item value="delegate" />
      <item value="Note: Only invoked on beans whose lifecycle is under the full control of the factory - which is always the case for singletons, but not guaranteed for any other scope." />
      <item value="guaranteed" />
      <item value="flat Map" />
    </histories>
  </component>
  <component name="Settings">
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="76c4912df8b13284" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>